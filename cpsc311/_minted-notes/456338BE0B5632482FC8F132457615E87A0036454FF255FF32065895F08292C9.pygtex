\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{;; Example 1: Call\PYGZhy{}by\PYGZhy{}value}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{+}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{c+c1}{;; evaluate the bound expression...}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{c+c1}{;;.. then perform substitution}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{p}{\PYGZcb{}}
\PYG{l+m+mi}{0}

\PYG{c+c1}{;; Example 2: Call\PYGZhy{}by\PYGZhy{}name evaluation (substitute the entire named expression!)}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{+}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{+}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{+}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}\PYGZcb{}}

\PYG{c+c1}{;; Example 3: substitution blows away the bound expression without ever}
\PYG{c+c1}{;; evaluating it}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{+}\PYG{+w}{ }\PYG{l+m+mi}{5}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{9}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{9}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{l+m+mi}{7}

\PYG{c+c1}{;; Example 4: Wait a minute, that means...}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{room\PYGZhy{}warmer}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{9}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{9}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{\PYGZcb{}}\PYG{+w}{  }\PYG{c+c1}{;; NO INFINITE LOOP, sadly the room stays cold :(}
\PYG{o}{\PYGZsq{}}\PYG{l+m+mi}{7}

\PYG{c+c1}{;; Call\PYGZhy{}by\PYGZhy{}name generalizes to *non\PYGZhy{}strict* evaluation semantics,}
\PYG{c+c1}{;; wherein in addition to binding expressions to identifiers,}
\PYG{c+c1}{;; constructor expressions do not evaluate their arguments: they are values!}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{pair}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}\PYGZcb{}}\PYG{+w}{  }\PYG{c+c1}{;; \PYGZlt{}\PYGZhy{}\PYGZhy{} this is a value (a pair of expressions)}

\PYG{c+c1}{;; this program, unlike the previous, *diverges*}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{left}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{pair}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{fix}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{+w}{ }\PYG{l+s+ss}{f}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{;; this does evaluate and goes into infinite loop since}
\PYG{c+c1}{;; fix is not a constructor expression}

\PYG{c+c1}{;; As per our previous languages, a legal program can have free identifiers}
\PYG{c+c1}{;; NOOOOO....this is no longer lexical scoping}
\PYG{c+c1}{;; naive substituition doesn\PYGZsq{}t cut it anymore for this language}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{y}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{+w}{       }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{l+s+ss}{y}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{x}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{l+m+mi}{3}

\PYG{c+c1}{;; YES:}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{with}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{g}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{;; rename x \PYGZhy{}\PYGZgt{} g}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}\PYGZcb{}}
\PYG{o}{\PYGZsq{}}\PYG{p}{\PYGZob{}}\PYG{l+s+ss}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{+w}{ }\PYG{l+s+ss}{x}\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{;; ERROR Unbound x}

\PYG{c+c1}{;; Fix:}
\PYG{c+c1}{;; OPTION 1: Capture avoiding substituition}
\PYG{c+c1}{;; OPTION 2: restrict what counts as a program to programs}
\PYG{c+c1}{;;           that do not have free identifiers (\PYGZdq{}closed\PYGZdq{})}

\PYG{c+c1}{;; PLAI is closed}



\end{Verbatim}
